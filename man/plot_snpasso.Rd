% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ggplot_snpasso.R
\name{plot_snpasso}
\alias{plot_snpasso}
\title{Plot SNP associations}
\usage{
plot_snpasso(scan1output, snpinfo, lodcolumn = 1, show_all_snps = TRUE,
  drop.hilit = NA, col.hilit = "violetred", col = "darkslateblue",
  ylim = NULL, gap = 25, bgcolor = "gray90", altbgcolor = "gray85", ...)
}
\arguments{
\item{scan1output}{Output of \code{\link[qtl2scan]{scan1}}.  Should
contain an attribute, \code{"snpinfo"}, as when
\code{\link[qtl2scan]{scan1}} are run with SNP probabilities
produced by \code{\link[qtl2scan]{genoprob_to_snpprob}}.}

\item{snpinfo}{Data frame with SNP information with the following
    columns (the last three are generally derived from with
    \code{\link[qtl2scan]{index_snps}}):
\itemize{
\item \code{chr} - Character string or factor with chromosome
\item \code{pos} - Position (in same units as in the \code{"map"}
    attribute in \code{genoprobs}.
\item \code{sdp} - Strain distribution pattern: an integer, between
    1 and \eqn{2^n - 2} where \eqn{n} is the number of strains, whose
    binary encoding indicates the founder genotypes
\item \code{snp} - Character string with SNP identifier (if
    missing, the rownames are used).
\item \code{index} - Indices that indicate equivalent
    groups of SNPs.
\item \code{intervals} - Indexes that indicate which marker
    intervals the SNPs reside.
\item \code{on_map} - Indicate whether SNP coincides with a marker
    in the \code{genoprobs}
}}

\item{lodcolumn}{LOD score column to plot (a numeric index, or a
character string for a column name). One or more value(s) allowed.}

\item{show_all_snps}{If TRUE, expand to show all SNPs.}

\item{drop.hilit}{SNPs with LOD score within this amount of the maximum SNP association will be highlighted.}

\item{col.hilit}{Color of highlighted points}

\item{col}{Color of other points}

\item{ylim}{y-axis limits}

\item{gap}{Gap between chromosomes.}

\item{bgcolor}{Background color for the plot.}

\item{altbgcolor}{Background color for alternate chromosomes.}

\item{...}{Additional graphics parameters.}

\item{patterns}{Connect SDP patterns: one of \code{c("none","all","hilit")}.}

\item{legend.position}{Position of legend (default \code{"none"}).}
}
\description{
Plot SNP associations, with possible expansion from distinct snps to all snps.
}
\examples{
\dontrun{
# load example DO data from web
library(qtl2geno)
file <- paste0("https://raw.githubusercontent.com/rqtl/",
               "qtl2data/master/DOex/DOex.zip")
DOex <- read_cross2(file)

# subset to chr 2
DOex <- DOex[,"2"]

# calculate genotype probabilities and convert to allele probabilities
pr <- calc_genoprob(DOex, error_prob=0.002)
apr <- genoprob_to_alleleprob(pr)

# download snp info from web
tmpfile <- tempfile()
file <- paste0("https://raw.githubusercontent.com/rqtl/",
               "qtl2data/master/DOex/c2_snpinfo.rds")
download.file(file, tmpfile, quiet=TRUE)
snpinfo <- readRDS(tmpfile)
unlink(tmpfile)

# calculate strain distribution patterns
library(qtl2scan)
snpinfo$sdp <- calc_sdp(snpinfo[,-(1:4)])

# switch map in allele probabilities to Mbp
apr$map <- DOex$pmap

# identify equivalent snps
snpinfo <- index_snps(DOex$pmap, snpinfo)

# convert to snp probabilities
snppr <- genoprob_to_snpprob(apr, snpinfo)

# perform SNP association analysis (here, ignoring residual kinship)
out_snps <- scan1(snppr, DOex$pheno)

# plot results
library(qtl2ggplot)
ggplot_snpasso(out_snps, snpinfo)

# can also just type autoplot() if ggplot2 attached
library(ggplot2)
autoplot(out_snps, snpinfo)

# plot just subset of distinct SNPs
autoplot(out_snps, snpinfo, show_all_snps=FALSE)

# highlight the top snps (with LOD within 1.5 of max)
autoplot(out_snps, snpinfo, drop.hilit=1.5)

# highlight SDP patterns in SNPs; connect with lines.
autoplot(out_snps, snpinfo, patterns="all",drop.hilit=4)

# highlight top SDP patterns in SNPs; connect with lines.
autoplot(out_snps, snpinfo, patterns="hilit",drop.hilit=4)
}

}
\seealso{
\code{\link{ggplot_scan1}}, \code{\link{ggplot_coef}}, \code{\link{ggplot_coefCC}}
}
